@{
    ViewBag.Title = "Chat";
}

<div class="page-wrapper stormy-theme toggled">
    <a id="show-sidebar" class="btn btn-sm btn-dark" href="#">
        <i class="fas fa-bars"></i>
    </a>
    <nav id="sidebar" class="sidebar-wrapper">
        <div class="sidebar-content">
            <div class="sidebar-brand">
                <a href="#">@ViewBag.Servername</a>
            </div>
            <div class="sidebar-header">
                <div class="user-pic">
                    <img class="img-responsive img-rounded" style="height:70px; height: 70px" src="~/Content/images/profile.jpg" alt="User picture">
                </div>
                <div class="user-info">
                    <span class="user-name">
                        @ViewBag.Username
                    </span>
                    <br>
                    <br />
                    <span class="user-role">
                        @ViewBag.Userrole
                    </span>
                    <span class="logout-link">
                        <a id="logout" href="@Url.Action("Logout", "Home")">Logout</a>
                    </span>
                </div>
            </div>
            <!-- sidebar-header  -->
            <div class="status-change">
                <div>

                </div>
            </div>
            <!-- sidebar-search  -->
            <div class="sidebar-menu">
                <ul>
                    <li class="header-menu">
                        <span>Communication</span>
                    </li>
                    <li class="sidebar-dropdown">
                        <a href="#">
                            <i class="fas fa-comment-alt"></i>
                            <span>Chat channels</span>

                            <!--<span class="badge badge-pill badge-danger">New</span>-->
                        </a>
                        <div class="sidebar-submenu">
                            <ul id="rooms"></ul>
                        </div>
                    </li>
                    <li class="sidebar-dropdown">
                        <a href="#">
                            <i class="fas fa-cog"></i>
                            <span>Settings</span>
                        </a>
                        <div class="sidebar-submenu">
                            <ul>
                                <li>
                                    <a href="#">General</a>
                                </li>
                                <li>
                                    <a href="#">Change password</a>
                                </li>
                                @{ if (ViewBag.Userrole == "Admin")
                                    {
                                        <li>
                                            <a href="#" id="joinstring-link">Show server invite password</a>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </li>
                    <li class="header-menu">
                        <span>Tools</span>
                    </li>
                    <li>
                        <a href="#" id="calendar-link">
                            <i class="fa fa-calendar"></i>
                            <span>Calendar</span>
                        </a>
                    </li>

                </ul>
                
            </div>
            <!-- sidebar-menu  -->
        </div>
    </nav>
    <!-- sidebar-wrapper  -->

    <main class="page-content">
        <div class="container-fluid">
            <div class="modal fade login-block" tabindex="-1" id="newroommodal"
                 data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-md room-modal">
                    <div class="modal-content">
                        <div class="modal-body">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" style="text-align:left">Create new room</h4>
                            <hr />
                            <br />
                            <form class="new-room-form" method="post">
                                <div class="form-group">
                                    <label for="roomname">Room name</label>
                                    <input type="text" id="roomname" name="roomname" class="form-control" required maxlength="50"/>
                                </div>
                                <div class="form-check">
                                    <button type="submit" id="new-room-button" class="btn float-right">Create</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="modal fade login-block" tabindex="-1" id="uploadModal"
                 data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-lg room-modal">
                    <div class="modal-content">
                        <div class="modal-body">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title" style="text-align:left">Upload a file</h4>
                            <hr />
                            <br />
                            <form action="/Home/UploadFile" enctype="multipart/form-data" method="post" id="upload-form">
                                <label for="file">Choose a file:</label><br />
                                <input type="file" name="file" class="btn float-left" id="file"><br><br>
                                <img src="" id="the-canvas">
                                <br />
                                <button type="submit" id="submit-file" value="Upload Image" class="btn float-right">Submit</button>
                                <br><br>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="container-fluid">
            <div class="modal fade login-block" tabindex="-1" id="joinstringmodal" data-keyboard="false" data-backdrop="static">
                <div class="modal-dialog modal-sm room-modal">
                    <div class="modal-content">
                        <div class="modal-body">
                            <button type="button" class="close" style="margin:0;" data-dismiss="modal">×</button>
                            <h4 class="modal-title" style="text-align:left">Invite password</h4>
                            <hr />
                            <br />
                            <p class="invite-pass">
                                @{ if (ViewBag.Userrole == "Admin")
                                    {
                                        @ViewBag.joinstring}
                                }
                            </p>
                        </div>
                    </div>
                </div>
            </div>



            <div id="modal-update" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-body">

                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title"><span id="eventTitle"></span></h4>
                            <hr />
                                <label><b>Start</b></label><br />
                                <p id="start"></p><br />
                                <label><b>End</b></label><br />
                                <p id="end"></p><br />
                                <label><b>Description</b></label><br />
                                <p  id="desc"></p><br />
                            
                            <br />
                            <button id="btnDelete" class="btn btn-default btn-sm pull-right">
                                <span class="glyphicon glyphicon-remove"></span> Remove
                            </button>
                            <button id="btnEdit" class="btn btn-default btn-sm pull-right" style="margin-right:5px;">
                                <span class="glyphicon glyphicon-pencil"></span> Edit
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div id="modal-save" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-body">

                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">Save Event</h4>
                            <hr />
                            <br />
                            <div id="event-preview"></div>
                            <form class="form-horizontal">
                                <input type="hidden" id="hdEventID" value="0" />
                                <div class="form-group">
                                    <label>Subject</label>
                                    <input type="text" id="txtSubject" maxlength="100" class="form-control" />
                                </div>
                                <div class="form-group">
                                    <label>Start</label>
                                    <div class="input-group date" id="dtp1">
                                        <input type="datetime-local" id="txtStart" class="form-control" size="15" />

                                    </div>
                                </div>
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label><input type="checkbox" id="chkIsFullDay" checked="checked" /> Full Day event</label>
                                    </div>
                                </div>
                                <div class="form-group" id="divEndDate" style="display:none">
                                    <label>End</label>
                                    <div class="input-group date" id="dtp2">
                                        <input type="datetime-local" id="txtEnd" class="form-control" />
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Description</label>
                                    <textarea id="txtDescription" rows="3" class="form-control" maxlength="300"></textarea>
                                </div>
                                <div class="form-group">
                                    <label>Theme Color</label>
                                    <select id="ddThemeColor" class="form-control">
                                        <option value="">Default</option>
                                        <option value="red">Red</option>
                                        <option value="blue">Blue</option>
                                        <option value="black">Black</option>
                                        <option value="green">Green</option>
                                    </select>
                                </div>
                                <button type="button" id="btnSave" class="btn float-right">Save</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
            <div id="chats">
                <input type='hidden' id='nickname' />


                <div id="calendar-space" class="room" hidden>
                    <div class="room-name">Calendar</div>
                    <div id="calendar">
                    </div>
                </div>
            </div>


        </div>
    </main>
</div>

@section scripts {
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.3.0.min.js"></script>

    <link rel="stylesheet" runat="server" media="screen" href="~/Content/styles/base.css" />
    <link rel="stylesheet" runat="server" media="screen" href="~/Content/styles/calendar.css" />
    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.css" rel="stylesheet" />
    <link href="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.print.css" rel="stylesheet" media="print" />

    <script src="~/Content/js/sidebar.js" type="text/javascript"></script>
    <script src="~/signalr/hubs"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.4.0/fullcalendar.min.js"></script>

    <script>


        $(function () {
            startChatHub();
        });



        function startChatHub() {
            var chat = $.connection.chatHub;
            var username = "@ViewBag.Username";
            var loaded_messages = 0;
            var last_loaded_id = 0;


            $('#nickname').val(username);

            $('#file').on('change', function (ev) {
                var f = ev.target.files[0];
                var filetype = f["type"];
                var fr = new FileReader();
                var ValidImageTypes = ["image/gif", "image/jpeg", "image/png"];

                fr.onload = function (ev2) {
                    if ($.inArray(ev.target.files[0]["type"], ValidImageTypes) > 0) {
                        console.dir(ev2);
                        $('#the-canvas').attr('src', ev2.target.result);
                    }
                };
                //console.log($('#file'));
                fr.readAsDataURL(f);
            });

            $.connection.hub.start().done(function () {
                chat.server.notify($('#nickname').val(), $.connection.hub.id, "general" + "@ViewBag.Servername");
            });

            getTime = function () {
                var currentDate = new Date();
                var currentTime = currentDate.getDay() + "." + currentDate.getMonth() + "." + currentDate.getFullYear() + " " + currentDate.getHours() + ":"
                    + currentDate.getMinutes() + ":"
                    + currentDate.getSeconds();
                return currentTime;
            };

            chat.client.online = function (name) {
                if (name == $('#nickname').val()) {
                    $('#onlineusers').append('<li class="online-user you">You: ' + name + '</li>');
                }
                else {
                    $('#onlineusers').append('<li class="online-user">' + name + '</li>');
                    $("#users").append('<option value="' + name + '">' + name + '</option>');
                }
            };
            chat.client.enters = function (name, roomname) {
                $("#users").append('<option value="' + name + '">' + name + '</option>');
                $('#onlineusers').append('<li class="online-user">' + name + '</li>');
            };

            chat.client.scrollDown = function () {

                    $(".messages:visible")[0].scrollTop = $(".messages:visible")[0].scrollHeight - $(".messages:visible")[0].clientHeight;              

            }

            chat.client.broadcastMessage = function (name, message, roomname, time, loaded) {
                if (message != "") {

                    //console.log(document.hasFocus());
                    if (!document.hasFocus() && !loaded) {
                        var audio = new Audio('/Content/pull-out.mp3');
                        audio.play();
                    }

                    message = message.replace(/</g, "&lt;").replace(/>/g, "&gt;");
                    //console.log(roomname);
                    var funkcja;
                    if (loaded) {
                        funkcja = function (node, message) {
                            node.prepend(message);
                        }
                    }
                    else {
                        funkcja = function (node, message) {
                            node.append(message);
                        }
                    }
                    if (name == username) {
                        funkcja($("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")), ('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username-right">' + name + '</span>' +
                            '<p class= "dark" >' + message + '<br><br> <span class="time-right small">' + time +
                            '</span></p></div></div>'));
                    }
                    else {
                       funkcja( $("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")),('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username">' + name + '</span>' +
                            '<p class= "light" >' + message + '<br><br> <span class="time-left small">' + time +
                            '</span></p></div></div>'));
                    }
                    ;
                    if (!loaded) {
                       // console.log("Message broadcasted to: " + roomname.replace("@ViewBag.Servername", ""));
                        $(".messages:visible")[0].scrollTop = $(".messages:visible")[0].scrollHeight - $(".messages:visible")[0].clientHeight;
                    }
                    //console.log($(".messages:visible"))
                }
            };


            chat.client.broadcastImage = function (name, message, roomname, time, loaded) {


                if (message != "") {
                    if (!document.hasFocus() && !loaded) {
                        var audio = new Audio('/Content/pull-out.mp3');
                        audio.play();
                    }

                    //console.log(roomname);
                    var funkcja;
                    if (loaded) {
                        funkcja = function (node, message) {
                            //node.prepend(message);
                            node.prepend(message);
                        }
                    }
                    else {
                        funkcja = function (node, message) {
                            node.append(message);
                        }
                    }

                    if (name == username) {
                        funkcja($("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")),('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username-right">' + name + '</span>' +
                            '<p class= "dark" >' + '<a href="' + message + '" target="new"><img src="' + message + '" class="preview"></a>' + '<br><br> <span class="time-right small">' + time +
                            '</span></p></div></div>'));
                    }
                    else {
                        funkcja($("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")),('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username">' + name + '</span>' +
                            '<p class= "light" >' + '<a href="' + message + '" target="new"><img src="' + message + '" class="preview"></a>' + '<br><br> <span class="time-left small">' + time +
                            '</span></p></div></div>'));
                    }

                    if (!loaded) {
                        $(".preview").on('load', function () {
                            $(".messages:visible")[0].scrollTop = $(".messages:visible")[0].scrollHeight - $(".messages:visible")[0].clientHeight;
                        })
                    }

                    //console.log("Image broadcasted to: " + roomname.replace("@ViewBag.Servername", ""));

                    //console.log($(".messages:visible"))
                }
            };


            chat.client.broadcastFile = function (name, message, roomname, time, loaded) {
                if (message != "") {
                    //console.log(roomname);

                    var funkcja;
                    if (loaded) {
                        funkcja = function (node, message) {
                            node.prepend(message);
                        }
                    }
                    else {
                        funkcja = function (node, message) {
                            node.append(message);
                        }
                    }

                    if (name == username) {
                        funkcja($("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")),('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username-right">' + name + '</span>' +
                            '<p class= "dark" ><a href="' + message + '" target="_blank"><i class="fas fa-file"></i> ' + message.replace("../Uploaded/", "") + '</a>' + '<br><br> <span class="time-right small">' + time +
                            '</span></p></div></div>'));
                    }
                    else {
                        funkcja($("." + (roomname.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + " .messages")),('<div class="msg row px-4">' +
                            '<div class="container">' +
                            '<span class="username">' + name + '</span>' +
                            '<p class= "light" ><a href="' + message + '" target="_blank"><i class="fas fa-file"></i> ' + message.replace("../Uploaded/", "") + '</a>' + '<br><br> <span class="time-left small">' + time +
                            '</span></p></div></div>'));
                    }

                    if (!loaded) {

                        $(".messages:visible")[0].scrollTop = $(".messages:visible")[0].scrollHeight - $(".messages:visible")[0].clientHeight;
                        //console.log("File broadcasted to: " + roomname.replace("@ViewBag.Servername", ""));
                    }

                    //console.log($(".messages:visible"))
                }
            };

            chat.client.disconnect = function (name) {
                $('#onlineusers li').remove(":contains('" + name + "')");
                $("#users option").remove(":contains('" + name + "')");
            };

            fillRooms = function () {
                $('#rooms').append("@foreach (var room in ViewBag.Rooms) {<li><a href='#' class='room-link' id='@room'>" + "@room.Replace("-" + ViewBag.Servername.ToString(), "")" + "</a></li>}");
                $('#rooms').append("<li><a href='#' id='new-room'>Create new room</a></li>");
            };

            makeRooms = function () {
                $('#chats').append("@foreach (var room in ViewBag.Rooms) {<div hidden id='chatarea' class='room @room.Replace("-" + ViewBag.Servername.ToString(), "").Replace(" ", "-")'><div class='room-name'>#@room.Replace("-" + ViewBag.Servername.ToString(), "")</div><div class='messages' id='chatlog'></div > <div class='message-input row' style='position:relative' maxlength='499'><input type='text' id='message' class='col-md-10 message' spellcheck='true' autofocus maxlength='499' placeholder='Write your message...' /><button class='submit btn btn-send col-md-1' id='btn-file'><i class='fa fa-paperclip' aria-hidden='true'></i></button><button class='submit btn btn-send col-md-1' id='btn-send'><i class='fa fa-paper-plane' aria-hidden='true'></i></button></div></div>}");
            }

            chat.client.roomenter = function (name, roomname) {
                $("." + (roomname.replace("@ViewBag.Servername", "") + " #chatlog")).append('<div class="text-infos">' + name + ' joins the conversation</div>');
            };
            chat.client.roomleft = function (name, roomname) {
                $("." + (roomname.replace("@ViewBag.Servername", "") + " #chatlog")).append('<div class="text-infos">' + name + ' leaves the conversation</div>');
            }

            $.connection.hub.start().done(function () {
                var current_room = "general" + "@ViewBag.Servername";

                makeRooms();
                var x = document.getElementsByClassName(current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-'));

               // console.log("Looking for class " + current_room.replace("@ViewBag.Servername", ""))
                for (i = 0; i < x.length; i++) {
                    x[i].removeAttribute('hidden');
                    //console.log("Removed hidden");
                }
                chat.server.getRooms("@ViewBag.Servername");

                fillRooms();
                chat.server.join(current_room);
                chat.server.notify($('#nickname').val(), $.connection.hub.id, current_room);

                loaded_messages = 0;
                chat.server.load(current_room.replace("@ViewBag.Servername", ""), "@ViewBag.Servername", $.connection.hub.id, 0, 10)
                    .done(function (result) { last_loaded_id = result; loaded_messages += 10; });
                    ;

                //console.log("Current in room: " + current_room);



                lazyscroll = function () {
                    //console.log("Scrolling....")
                    if (this.scrollTop == 0) {
                        if (last_loaded_id != -1) {
                            var current_top_element = $(this).children().first();

                            //console.log(current_top_element);
                            //console.log(current_top_element.outerHeight());
                            chat.server.load(current_room.replace("@ViewBag.Servername", ""), "@ViewBag.Servername", $.connection.hub.id, last_loaded_id, 10)
                                .done(function (result) { last_loaded_id = result; loaded_messages += 10;/* console.log("added messages")*/ });

                            $('.room').find(".messages:visible")[0].scrollTop = current_top_element.outerHeight();
                        }
                    }
                };

                $('.room').find(".messages:visible").bind('scroll', lazyscroll);

                $('.room').find('#btn-send').click(function () {
                    //if ($("#users").val() == "All") {
                    chat.server.send($('#nickname').val(), $('.message').val(), current_room);
                    /*}
                    else {
                        chat.server.sendToSpecific($('#nickname').val(), $('#message').val(), $("#users").val());
                    }*/
                    $('.message').val('').focus();
                });

                $('.room').find("#btn-file").click(function () {
                    $("#uploadModal").modal('show');
                    //console.log("Send file clicked");
                });

                $('#logout').click(function () {
                    chat.connection.stop();
                });

                leave_current_room = function () {
                    //console.log("Leaving room " + current_room);
                    var x = document.getElementsByClassName(current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-'));
                    $("." + current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-') + ' #chatlog > .msg').remove();

                    //console.log("Looking for class " + current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-'));
                    for (i = 0; i < x.length; i++) {
                        x[i].setAttribute('hidden', true);
                        //console.log("added hidden");
                    }

                    chat.server.leave(current_room);

                };

                $(".room-link").click(function (e) {
                    leave_current_room();
                    loaded_messages = 0;

                    var childs = document.getElementById("chats").children;

                    for (i = 0; i < childs.length; i++) {
                        childs[i].setAttribute('hidden', true);
                        //console.log("added hidden");
                    }

                    //console.log("Joining room " + $(e.target).text());
                    current_room = $(e.target).text() + "@ViewBag.Servername";
                    x = document.getElementsByClassName(current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-'));

                    //console.log("Looking for class " + current_room.replace("@ViewBag.Servername", "").replace(/\s/g, '-'));
                    for (i = 0; i < x.length; i++) {
                        x[i].removeAttribute('hidden');
                        //console.log("removed hidden");
                    }
                    chat.server.join(current_room);
                    chat.server.notify($('#nickname').val(), $.connection.hub.id, current_room);
                    $('.room').find(".messages:visible").unbind('scroll', lazyscroll);
                    var lastid = chat.server.load(current_room.replace("@ViewBag.Servername", ""), "@ViewBag.Servername", $.connection.hub.id, 0, 10)
                        .done(function (result) {
                            last_loaded_id = result; loaded_messages += 10;
                            $('.room').find(".messages:visible").bind('scroll', lazyscroll); });
                    //console.log("Last message id:");
                    //console.log(lastid);
                });

                $("#new-room").click(function () {
                    $("#newroommodal").modal('show');
                });


                $(".new-room-form").submit(function () {
                    var data = {};
                    console.log()
                        $.ajax({
                            type: "POST",
                            url: "/home/Index",
                            data: $(".new-room-form").serialize(),
                            contentType: "application/json",
                            dataType: "json",
                            success: function () {
                                window.alert("Lol");
                                $("#newroommodal").modal('hide');
                            }
                        })
                });


                $("#btnHideModal").click(function () {
                    $("#newroommodal").modal('hide');
                })

                $("#btn-file").click(function () {
                    $("#uploadModal").modal('show');
                });

                $("#btnHideModal").click(function () {
                    $("#updateModal").modal('hide');
                });

                $("#joinstring-link").click(function () {
                    $("#joinstringmodal").modal('show');
                });

                $("#btnHideModal").click(function () {
                    $("#joinstringmodal").modal('hide');
                });

                $('.room').find(".message").on("keydown", function (e) {
                    if (e.which == 13) {
                        //if ($("#users").val() == "All") {
                        //console.log(e.target);
                        chat.server.send($('#nickname').val(), $(e.target).val(), current_room);
                        /*}
                        else {
                            chat.server.sendToSpecific($('#nickname').val(), $('#message').val(), $("#users").val());
                        }*/
                        $('.message').val('').focus();
                    }

                });

                $("#upload-form").on('submit', function (e) {

                    e.preventDefault();
                    var formData = new FormData(this);
                    //console.log(formData);

                    $.ajax({
                        url: '/Home/UploadFile',
                        type: 'POST',
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function () {
                            file_name = $('#file')[0].files[0].name;
                            file_type = $('#file')[0].files[0].type;
                            var ValidImageTypes = ["image/gif", "image/jpeg", "image/png"];
                            if ($.inArray(file_type, ValidImageTypes) > 0) {
                                chat.server.sendimage($('#nickname').val(), "../Uploaded/" + file_name, current_room);

                            }
                            else {
                                chat.server.sendfile($('#nickname').val(), "../Uploaded/" + file_name, current_room);
                            }
                            $('#the-canvas').attr('src', "");
                            $("#file").replaceWith($('#file').val('').clone(true));;
                        }
                    });

                    $("#updateModal").attr("hidden", true);
                });




                $("#calendar-link").click(function (e) {
                    leave_current_room();
                    var x = document.getElementById("calendar-space");
                    x.removeAttribute('hidden');
                    var events = [];
                    var selectedEvent = null;
                    FetchEventAndRenderCalendar();

                    function FetchEventAndRenderCalendar() {
                        events = [];
                        $.ajax({
                            type: "GET",
                            url: "/home/GetEvents",
                            success: function (data) {
                                $.each(data, function (i, v) {
                                    events.push({
                                        eventID: v.id,
                                        title: v.subject,
                                        description: v.description,
                                        start: v.startdate,
                                        end: v.enddate!= null ? v.enddate : null,
                                        color: v.color,
                                        allDay: v.fullday
                                    });
                                })

                                GenerateCalendar(events);
                            },
                            error: function (error) {
                                alert('failed');
                            }
                        })

                    };

                    function GenerateCalendar(events) {
                        $('#calendar').fullCalendar('destroy');
                        $('#calendar').fullCalendar({
                            contentHeight: 800,
                            defaultDate: new Date(),
                            timeFormat: 'H(:mm)',
                            timezone: 'local',
                            header: {
                                left: 'prev,next today',
                                center: 'title',
                                right: 'month,basicWeek,basicDay,agenda'
                            },
                            eventLimit: true,
                            eventColor: '#192231',
                            events: events,

                            eventClick: function (calEvent, jsEvent, view) {
                                selectedEvent = calEvent;

                                $('#modal-update #eventTitle').text(calEvent.title);
                                $('#modal-update #start').text(calEvent.start.format('dddd, MMMM Do YYYY HH:mm'));
                                $('#modal-update #end').text(calEvent.end.format('dddd, MMMM Do YYYY HH:mm'));
                                //console.log(calEvent.start.toDate());
                                $('#modal-update #desc').text(calEvent.description);
                                $('#modal-update').modal();
                            },
                            selectable: true,
                            select: function (start, end) {
                                selectedEvent = {
                                    eventID: 0,
                                    title: '',
                                    description: '',
                                    start: start,
                                    end: end,
                                    allDay: false,
                                    color: '',
                                };
                                openAddEditForm();
                                $('#calendar').fullCalendar('unselect');
                            },
                            editable: true,
                            eventDrop: function (event) {
                                var data = {
                                    id: event.eventID,
                                    subject: event.title,
                                    startdate: event.start.format('dddd, MMMM Do YYYY HH:mm'),
                                    enddate: event.end != null ? event.end.format('dddd, MMMM Do YYYY HH:mm') : null,
                                    description: event.description,
                                    color: event.color,
                                    fullday: event.allDay

                                };
                                //console.log(data);
                                SaveEvent(data);
                            }
                        })
                    };

                    $('#btnEdit').click(function () {
                        //Open modal dialog for edit event
                        openAddEditForm();
                    });

                    $('#btnDelete').click(function () {
                        if (selectedEvent != null && confirm('Are you sure?')) {
                            $.ajax({
                                type: "POST",
                                url: '/home/DeleteEvent',
                                data: { 'eventID': selectedEvent.eventID },
                                success: function (data) {
                                    if (data.status) {
                                        //Refresh the calender
                                        FetchEventAndRenderCalendar();
                                        $('#modal-update').modal('hide');
                                    }
                                },
                                error: function () {
                                    alert('Failed');
                                }
                            })
                        }
                    });

                    //$('#dtp1,#dtp2').datetimepicker();

                    $('#chkIsFullDay').change(function () {
                        if ($(this).is(':checked')) {
                            $('#divEndDate').hide();
                        }
                        else {
                            $('#divEndDate').show();
                        }
                    });

                    function openAddEditForm() {
                        if (selectedEvent != null) {
                            $('#hdEventID').val(selectedEvent.eventID);
                            $('#txtSubject').val(selectedEvent.title);
                            $('#txtStart').val(moment(selectedEvent.start).format('dddd, MMMM Do YYYY HH:mm'));
                            $('#chkIsFullDay').prop("checked", selectedEvent.allDay || false);
                            $('#chkIsFullDay').change();
                            $('#txtEnd').val(selectedEvent.end != null ? moment(selectedEvent.end).format('dddd, MMMM Do YYYY HH:mm') : '');
                            $('#txtDescription').val(selectedEvent.description);
                            $('#ddThemeColor').val(selectedEvent.color);

                            $('#modal-update').modal('hide');
                            $('#modal-save').modal();
                            $('#modal-save #event-preview').empty();

                            //console.log(selectedEvent);

                            if (selectedEvent.title != "") {

                                $("#modal-save #event-preview").append('<div id="preview"><label><b>Start</b></label><br/>' +
                                    '<p id = "start" ></p> <br />' +
                                    '<label><b>End</b></label> <br/>' +
                                    '<p id="end"></p> <br /></div>');


                                $('#modal-save #start').text(selectedEvent.start.format('dddd, MMMM Do YYYY HH:mm'));
                                $('#modal-save #end').text(selectedEvent.end.format('dddd, MMMM Do YYYY HH:mm'));
                                $('#modal-save .modal-title').text(selectedEvent.title);
                            }
                            else {

                                $('#modal-save .modal-title').text("Save event");
                            }
                        }
                        else {
                            $('#modal-update').modal('hide');
                            $('#modal-save').modal();
                            $('#modal-save #event-preview').empty();
                            $('#modal-save .modal-title').text("Save event");
                        }
                        
                    };

                    $('#modal-save').on('hidden.bs.modal', function () {

                        $('#modal-save #event-preview').empty();
                    })

                    $('#btnSave').click(function () {
                        //Validation/
                        if ($('#txtSubject').val().trim() == "") {
                            alert('Subject required');
                            return;
                        }
                        if ($('#txtStart').val().trim() == "") {
                            alert('Start date required');
                            return;
                        }
                        if ($('#chkIsFullDay').is(':checked') == false && $('#txtEnd').val().trim() == "") {
                            alert('End date required');
                            return;
                        }
                        else {
                            var startDate = Date.parse($('#txtStart').val());
                            var endDate = Date.parse($('#txtEnd').val());
                            if (startDate > endDate) {
                                alert('Invalid end date');
                                return;
                            }
                        }

                        var data = {
                            id: $('#hdEventID').val(),
                            subject: $('#txtSubject').val().trim(),
                            startdate: $('#txtStart').val().trim(),
                            enddate: $('#chkIsFullDay').is(':checked') ? null : $('#txtEnd').val().trim(),
                            description: $('#txtDescription').val(),
                            themecolor: $('#ddThemeColor').val(),
                            fullday: $('#chkIsFullDay').is(':checked')
                        }
                        SaveEvent(data);
                        // call function for submit data to the server
                    });

                    function SaveEvent(data) {
                        $.ajax({
                            type: "POST",
                            url: '/home/SaveEvent',
                            data: data,
                            success: function (data) {
                                if (data.status) {
                                    //Refresh the calender
                                    FetchEventAndRenderCalendar();
                                    $("#event-preview #preview").remove();
                                    $('#modal-save').modal('hide');
                                }
                            },
                            error: function () {
                                alert('Failed');
                            }
                        })
                    };

                });
            });
            }

    </script>
}   